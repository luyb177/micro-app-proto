// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: api/repertory/v1/repertory.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Repertory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity      uint32                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"` // 库存数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Repertory) Reset() {
	*x = Repertory{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repertory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repertory) ProtoMessage() {}

func (x *Repertory) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repertory.ProtoReflect.Descriptor instead.
func (*Repertory) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{0}
}

func (x *Repertory) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Repertory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repertory) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type AddRepertoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRepertoryRequest) Reset() {
	*x = AddRepertoryRequest{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRepertoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepertoryRequest) ProtoMessage() {}

func (x *AddRepertoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepertoryRequest.ProtoReflect.Descriptor instead.
func (*AddRepertoryRequest) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{1}
}

func (x *AddRepertoryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddRepertoryRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddRepertoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRepertoryReply) Reset() {
	*x = AddRepertoryReply{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRepertoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepertoryReply) ProtoMessage() {}

func (x *AddRepertoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepertoryReply.ProtoReflect.Descriptor instead.
func (*AddRepertoryReply) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{2}
}

func (x *AddRepertoryReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PurchaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RepertoryId   uint32                 `protobuf:"varint,2,opt,name=repertory_id,json=repertoryId,proto3" json:"repertory_id,omitempty"`
	Quantity      uint32                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseRequest) Reset() {
	*x = PurchaseRequest{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequest) ProtoMessage() {}

func (x *PurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequest.ProtoReflect.Descriptor instead.
func (*PurchaseRequest) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{3}
}

func (x *PurchaseRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PurchaseRequest) GetRepertoryId() uint32 {
	if x != nil {
		return x.RepertoryId
	}
	return 0
}

func (x *PurchaseRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PurchaseReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseReply) Reset() {
	*x = PurchaseReply{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseReply) ProtoMessage() {}

func (x *PurchaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseReply.ProtoReflect.Descriptor instead.
func (*PurchaseReply) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{4}
}

func (x *PurchaseReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FindRepertoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRepertoryRequest) Reset() {
	*x = FindRepertoryRequest{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRepertoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRepertoryRequest) ProtoMessage() {}

func (x *FindRepertoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRepertoryRequest.ProtoReflect.Descriptor instead.
func (*FindRepertoryRequest) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{5}
}

func (x *FindRepertoryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindRepertoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repertory     *Repertory             `protobuf:"bytes,1,opt,name=repertory,proto3" json:"repertory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRepertoryReply) Reset() {
	*x = FindRepertoryReply{}
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRepertoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRepertoryReply) ProtoMessage() {}

func (x *FindRepertoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_repertory_v1_repertory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRepertoryReply.ProtoReflect.Descriptor instead.
func (*FindRepertoryReply) Descriptor() ([]byte, []int) {
	return file_api_repertory_v1_repertory_proto_rawDescGZIP(), []int{6}
}

func (x *FindRepertoryReply) GetRepertory() *Repertory {
	if x != nil {
		return x.Repertory
	}
	return nil
}

var File_api_repertory_v1_repertory_proto protoreflect.FileDescriptor

const file_api_repertory_v1_repertory_proto_rawDesc = "" +
	"\n" +
	" api/repertory/v1/repertory.proto\x12\frepertory.v1\x1a\x1cgoogle/api/annotations.proto\"K\n" +
	"\tRepertory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\rR\bquantity\";\n" +
	"\x13AddRepertoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"-\n" +
	"\x11AddRepertoryReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"i\n" +
	"\x0fPurchaseRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12!\n" +
	"\frepertory_id\x18\x02 \x01(\rR\vrepertoryId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\rR\bquantity\")\n" +
	"\rPurchaseReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"&\n" +
	"\x14FindRepertoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"K\n" +
	"\x12FindRepertoryReply\x125\n" +
	"\trepertory\x18\x01 \x01(\v2\x17.repertory.v1.RepertoryR\trepertory2\xb5\x02\n" +
	"\x10RepertoryService\x12F\n" +
	"\bPurchase\x12\x1d.repertory.v1.PurchaseRequest\x1a\x1b.repertory.v1.PurchaseReply\x12i\n" +
	"\bAddGoods\x12!.repertory.v1.AddRepertoryRequest\x1a\x1f.repertory.v1.AddRepertoryReply\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/repertory/add\x12n\n" +
	"\rFindRepertory\x12\".repertory.v1.FindRepertoryRequest\x1a .repertory.v1.FindRepertoryReply\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/repertory/{id}B\x15Z\x13api/repertory/v1;v1b\x06proto3"

var (
	file_api_repertory_v1_repertory_proto_rawDescOnce sync.Once
	file_api_repertory_v1_repertory_proto_rawDescData []byte
)

func file_api_repertory_v1_repertory_proto_rawDescGZIP() []byte {
	file_api_repertory_v1_repertory_proto_rawDescOnce.Do(func() {
		file_api_repertory_v1_repertory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_repertory_v1_repertory_proto_rawDesc), len(file_api_repertory_v1_repertory_proto_rawDesc)))
	})
	return file_api_repertory_v1_repertory_proto_rawDescData
}

var file_api_repertory_v1_repertory_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_repertory_v1_repertory_proto_goTypes = []any{
	(*Repertory)(nil),            // 0: repertory.v1.Repertory
	(*AddRepertoryRequest)(nil),  // 1: repertory.v1.AddRepertoryRequest
	(*AddRepertoryReply)(nil),    // 2: repertory.v1.AddRepertoryReply
	(*PurchaseRequest)(nil),      // 3: repertory.v1.PurchaseRequest
	(*PurchaseReply)(nil),        // 4: repertory.v1.PurchaseReply
	(*FindRepertoryRequest)(nil), // 5: repertory.v1.FindRepertoryRequest
	(*FindRepertoryReply)(nil),   // 6: repertory.v1.FindRepertoryReply
}
var file_api_repertory_v1_repertory_proto_depIdxs = []int32{
	0, // 0: repertory.v1.FindRepertoryReply.repertory:type_name -> repertory.v1.Repertory
	3, // 1: repertory.v1.RepertoryService.Purchase:input_type -> repertory.v1.PurchaseRequest
	1, // 2: repertory.v1.RepertoryService.AddGoods:input_type -> repertory.v1.AddRepertoryRequest
	5, // 3: repertory.v1.RepertoryService.FindRepertory:input_type -> repertory.v1.FindRepertoryRequest
	4, // 4: repertory.v1.RepertoryService.Purchase:output_type -> repertory.v1.PurchaseReply
	2, // 5: repertory.v1.RepertoryService.AddGoods:output_type -> repertory.v1.AddRepertoryReply
	6, // 6: repertory.v1.RepertoryService.FindRepertory:output_type -> repertory.v1.FindRepertoryReply
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_repertory_v1_repertory_proto_init() }
func file_api_repertory_v1_repertory_proto_init() {
	if File_api_repertory_v1_repertory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_repertory_v1_repertory_proto_rawDesc), len(file_api_repertory_v1_repertory_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_repertory_v1_repertory_proto_goTypes,
		DependencyIndexes: file_api_repertory_v1_repertory_proto_depIdxs,
		MessageInfos:      file_api_repertory_v1_repertory_proto_msgTypes,
	}.Build()
	File_api_repertory_v1_repertory_proto = out.File
	file_api_repertory_v1_repertory_proto_goTypes = nil
	file_api_repertory_v1_repertory_proto_depIdxs = nil
}
